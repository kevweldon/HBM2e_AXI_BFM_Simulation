// my_sys_altera_mm_interconnect_1920_5ioayuq.v

// This file was auto-generated from altera_mm_interconnect_hw.tcl.  If you edit it your changes
// will probably be lost.
// 
// Generated using ACDS version 22.4 94

`timescale 1 ps / 1 ps
module my_sys_altera_mm_interconnect_1920_5ioayuq (
		input  wire [6:0]   mgc_axi4_master_0_altera_axi4_master_awid,                                             //                                            mgc_axi4_master_0_altera_axi4_master.awid
		input  wire [63:0]  mgc_axi4_master_0_altera_axi4_master_awaddr,                                           //                                                                                .awaddr
		input  wire [7:0]   mgc_axi4_master_0_altera_axi4_master_awlen,                                            //                                                                                .awlen
		input  wire [2:0]   mgc_axi4_master_0_altera_axi4_master_awsize,                                           //                                                                                .awsize
		input  wire [1:0]   mgc_axi4_master_0_altera_axi4_master_awburst,                                          //                                                                                .awburst
		input  wire [0:0]   mgc_axi4_master_0_altera_axi4_master_awlock,                                           //                                                                                .awlock
		input  wire [2:0]   mgc_axi4_master_0_altera_axi4_master_awprot,                                           //                                                                                .awprot
		input  wire [7:0]   mgc_axi4_master_0_altera_axi4_master_awuser,                                           //                                                                                .awuser
		input  wire [3:0]   mgc_axi4_master_0_altera_axi4_master_awqos,                                            //                                                                                .awqos
		input  wire [3:0]   mgc_axi4_master_0_altera_axi4_master_awregion,                                         //                                                                                .awregion
		input  wire         mgc_axi4_master_0_altera_axi4_master_awvalid,                                          //                                                                                .awvalid
		output wire         mgc_axi4_master_0_altera_axi4_master_awready,                                          //                                                                                .awready
		input  wire [255:0] mgc_axi4_master_0_altera_axi4_master_wdata,                                            //                                                                                .wdata
		input  wire [31:0]  mgc_axi4_master_0_altera_axi4_master_wstrb,                                            //                                                                                .wstrb
		input  wire         mgc_axi4_master_0_altera_axi4_master_wlast,                                            //                                                                                .wlast
		input  wire         mgc_axi4_master_0_altera_axi4_master_wvalid,                                           //                                                                                .wvalid
		input  wire [7:0]   mgc_axi4_master_0_altera_axi4_master_wuser,                                            //                                                                                .wuser
		output wire         mgc_axi4_master_0_altera_axi4_master_wready,                                           //                                                                                .wready
		output wire [6:0]   mgc_axi4_master_0_altera_axi4_master_bid,                                              //                                                                                .bid
		output wire [1:0]   mgc_axi4_master_0_altera_axi4_master_bresp,                                            //                                                                                .bresp
		output wire         mgc_axi4_master_0_altera_axi4_master_bvalid,                                           //                                                                                .bvalid
		input  wire         mgc_axi4_master_0_altera_axi4_master_bready,                                           //                                                                                .bready
		input  wire [6:0]   mgc_axi4_master_0_altera_axi4_master_arid,                                             //                                                                                .arid
		input  wire [63:0]  mgc_axi4_master_0_altera_axi4_master_araddr,                                           //                                                                                .araddr
		input  wire [7:0]   mgc_axi4_master_0_altera_axi4_master_arlen,                                            //                                                                                .arlen
		input  wire [2:0]   mgc_axi4_master_0_altera_axi4_master_arsize,                                           //                                                                                .arsize
		input  wire [1:0]   mgc_axi4_master_0_altera_axi4_master_arburst,                                          //                                                                                .arburst
		input  wire [0:0]   mgc_axi4_master_0_altera_axi4_master_arlock,                                           //                                                                                .arlock
		input  wire [2:0]   mgc_axi4_master_0_altera_axi4_master_arprot,                                           //                                                                                .arprot
		input  wire [7:0]   mgc_axi4_master_0_altera_axi4_master_aruser,                                           //                                                                                .aruser
		input  wire [3:0]   mgc_axi4_master_0_altera_axi4_master_arqos,                                            //                                                                                .arqos
		input  wire [3:0]   mgc_axi4_master_0_altera_axi4_master_arregion,                                         //                                                                                .arregion
		input  wire         mgc_axi4_master_0_altera_axi4_master_arvalid,                                          //                                                                                .arvalid
		output wire         mgc_axi4_master_0_altera_axi4_master_arready,                                          //                                                                                .arready
		output wire [6:0]   mgc_axi4_master_0_altera_axi4_master_rid,                                              //                                                                                .rid
		output wire [255:0] mgc_axi4_master_0_altera_axi4_master_rdata,                                            //                                                                                .rdata
		output wire [1:0]   mgc_axi4_master_0_altera_axi4_master_rresp,                                            //                                                                                .rresp
		output wire         mgc_axi4_master_0_altera_axi4_master_rlast,                                            //                                                                                .rlast
		output wire         mgc_axi4_master_0_altera_axi4_master_rvalid,                                           //                                                                                .rvalid
		input  wire         mgc_axi4_master_0_altera_axi4_master_rready,                                           //                                                                                .rready
		output wire [7:0]   mgc_axi4_master_0_altera_axi4_master_ruser,                                            //                                                                                .ruser
		output wire [6:0]   intel_noc_initiator_0_s0_axi4_awid,                                                    //                                                   intel_noc_initiator_0_s0_axi4.awid
		output wire [43:0]  intel_noc_initiator_0_s0_axi4_awaddr,                                                  //                                                                                .awaddr
		output wire [7:0]   intel_noc_initiator_0_s0_axi4_awlen,                                                   //                                                                                .awlen
		output wire [2:0]   intel_noc_initiator_0_s0_axi4_awsize,                                                  //                                                                                .awsize
		output wire [1:0]   intel_noc_initiator_0_s0_axi4_awburst,                                                 //                                                                                .awburst
		output wire [0:0]   intel_noc_initiator_0_s0_axi4_awlock,                                                  //                                                                                .awlock
		output wire [2:0]   intel_noc_initiator_0_s0_axi4_awprot,                                                  //                                                                                .awprot
		output wire [10:0]  intel_noc_initiator_0_s0_axi4_awuser,                                                  //                                                                                .awuser
		output wire [3:0]   intel_noc_initiator_0_s0_axi4_awqos,                                                   //                                                                                .awqos
		output wire         intel_noc_initiator_0_s0_axi4_awvalid,                                                 //                                                                                .awvalid
		input  wire         intel_noc_initiator_0_s0_axi4_awready,                                                 //                                                                                .awready
		output wire [255:0] intel_noc_initiator_0_s0_axi4_wdata,                                                   //                                                                                .wdata
		output wire [31:0]  intel_noc_initiator_0_s0_axi4_wstrb,                                                   //                                                                                .wstrb
		output wire         intel_noc_initiator_0_s0_axi4_wlast,                                                   //                                                                                .wlast
		output wire         intel_noc_initiator_0_s0_axi4_wvalid,                                                  //                                                                                .wvalid
		output wire [31:0]  intel_noc_initiator_0_s0_axi4_wuser,                                                   //                                                                                .wuser
		input  wire         intel_noc_initiator_0_s0_axi4_wready,                                                  //                                                                                .wready
		input  wire [6:0]   intel_noc_initiator_0_s0_axi4_bid,                                                     //                                                                                .bid
		input  wire [1:0]   intel_noc_initiator_0_s0_axi4_bresp,                                                   //                                                                                .bresp
		input  wire         intel_noc_initiator_0_s0_axi4_bvalid,                                                  //                                                                                .bvalid
		output wire         intel_noc_initiator_0_s0_axi4_bready,                                                  //                                                                                .bready
		output wire [6:0]   intel_noc_initiator_0_s0_axi4_arid,                                                    //                                                                                .arid
		output wire [43:0]  intel_noc_initiator_0_s0_axi4_araddr,                                                  //                                                                                .araddr
		output wire [7:0]   intel_noc_initiator_0_s0_axi4_arlen,                                                   //                                                                                .arlen
		output wire [2:0]   intel_noc_initiator_0_s0_axi4_arsize,                                                  //                                                                                .arsize
		output wire [1:0]   intel_noc_initiator_0_s0_axi4_arburst,                                                 //                                                                                .arburst
		output wire [0:0]   intel_noc_initiator_0_s0_axi4_arlock,                                                  //                                                                                .arlock
		output wire [2:0]   intel_noc_initiator_0_s0_axi4_arprot,                                                  //                                                                                .arprot
		output wire [10:0]  intel_noc_initiator_0_s0_axi4_aruser,                                                  //                                                                                .aruser
		output wire [3:0]   intel_noc_initiator_0_s0_axi4_arqos,                                                   //                                                                                .arqos
		output wire         intel_noc_initiator_0_s0_axi4_arvalid,                                                 //                                                                                .arvalid
		input  wire         intel_noc_initiator_0_s0_axi4_arready,                                                 //                                                                                .arready
		input  wire [6:0]   intel_noc_initiator_0_s0_axi4_rid,                                                     //                                                                                .rid
		input  wire [255:0] intel_noc_initiator_0_s0_axi4_rdata,                                                   //                                                                                .rdata
		input  wire [1:0]   intel_noc_initiator_0_s0_axi4_rresp,                                                   //                                                                                .rresp
		input  wire         intel_noc_initiator_0_s0_axi4_rlast,                                                   //                                                                                .rlast
		input  wire         intel_noc_initiator_0_s0_axi4_rvalid,                                                  //                                                                                .rvalid
		output wire         intel_noc_initiator_0_s0_axi4_rready,                                                  //                                                                                .rready
		input  wire [31:0]  intel_noc_initiator_0_s0_axi4_ruser,                                                   //                                                                                .ruser
		input  wire         mgc_axi4_master_0_altera_axi4_master_translator_clk_reset_reset_bridge_in_reset_reset, // mgc_axi4_master_0_altera_axi4_master_translator_clk_reset_reset_bridge_in_reset.reset
		input  wire         intel_noc_initiator_0_s0_axi4_translator_clk_reset_reset_bridge_in_reset_reset,        //        intel_noc_initiator_0_s0_axi4_translator_clk_reset_reset_bridge_in_reset.reset
		input  wire         iopll_0_outclk0_clk                                                                    //                                                                 iopll_0_outclk0.clk
	);

	wire   [31:0] mgc_axi4_master_0_altera_axi4_master_translator_m0_ruser;    // intel_noc_initiator_0_s0_axi4_translator:s0_ruser -> mgc_axi4_master_0_altera_axi4_master_translator:m0_ruser
	wire   [31:0] mgc_axi4_master_0_altera_axi4_master_translator_m0_wuser;    // mgc_axi4_master_0_altera_axi4_master_translator:m0_wuser -> intel_noc_initiator_0_s0_axi4_translator:s0_wuser
	wire    [1:0] mgc_axi4_master_0_altera_axi4_master_translator_m0_awburst;  // mgc_axi4_master_0_altera_axi4_master_translator:m0_awburst -> intel_noc_initiator_0_s0_axi4_translator:s0_awburst
	wire    [3:0] mgc_axi4_master_0_altera_axi4_master_translator_m0_arregion; // mgc_axi4_master_0_altera_axi4_master_translator:m0_arregion -> intel_noc_initiator_0_s0_axi4_translator:s0_arregion
	wire   [10:0] mgc_axi4_master_0_altera_axi4_master_translator_m0_awuser;   // mgc_axi4_master_0_altera_axi4_master_translator:m0_awuser -> intel_noc_initiator_0_s0_axi4_translator:s0_awuser
	wire    [7:0] mgc_axi4_master_0_altera_axi4_master_translator_m0_arlen;    // mgc_axi4_master_0_altera_axi4_master_translator:m0_arlen -> intel_noc_initiator_0_s0_axi4_translator:s0_arlen
	wire    [3:0] mgc_axi4_master_0_altera_axi4_master_translator_m0_arqos;    // mgc_axi4_master_0_altera_axi4_master_translator:m0_arqos -> intel_noc_initiator_0_s0_axi4_translator:s0_arqos
	wire   [31:0] mgc_axi4_master_0_altera_axi4_master_translator_m0_wstrb;    // mgc_axi4_master_0_altera_axi4_master_translator:m0_wstrb -> intel_noc_initiator_0_s0_axi4_translator:s0_wstrb
	wire          mgc_axi4_master_0_altera_axi4_master_translator_m0_wready;   // intel_noc_initiator_0_s0_axi4_translator:s0_wready -> mgc_axi4_master_0_altera_axi4_master_translator:m0_wready
	wire    [6:0] mgc_axi4_master_0_altera_axi4_master_translator_m0_rid;      // intel_noc_initiator_0_s0_axi4_translator:s0_rid -> mgc_axi4_master_0_altera_axi4_master_translator:m0_rid
	wire          mgc_axi4_master_0_altera_axi4_master_translator_m0_rready;   // mgc_axi4_master_0_altera_axi4_master_translator:m0_rready -> intel_noc_initiator_0_s0_axi4_translator:s0_rready
	wire    [7:0] mgc_axi4_master_0_altera_axi4_master_translator_m0_awlen;    // mgc_axi4_master_0_altera_axi4_master_translator:m0_awlen -> intel_noc_initiator_0_s0_axi4_translator:s0_awlen
	wire    [3:0] mgc_axi4_master_0_altera_axi4_master_translator_m0_awqos;    // mgc_axi4_master_0_altera_axi4_master_translator:m0_awqos -> intel_noc_initiator_0_s0_axi4_translator:s0_awqos
	wire    [3:0] mgc_axi4_master_0_altera_axi4_master_translator_m0_arcache;  // mgc_axi4_master_0_altera_axi4_master_translator:m0_arcache -> intel_noc_initiator_0_s0_axi4_translator:s0_arcache
	wire          mgc_axi4_master_0_altera_axi4_master_translator_m0_wvalid;   // mgc_axi4_master_0_altera_axi4_master_translator:m0_wvalid -> intel_noc_initiator_0_s0_axi4_translator:s0_wvalid
	wire   [63:0] mgc_axi4_master_0_altera_axi4_master_translator_m0_araddr;   // mgc_axi4_master_0_altera_axi4_master_translator:m0_araddr -> intel_noc_initiator_0_s0_axi4_translator:s0_araddr
	wire    [2:0] mgc_axi4_master_0_altera_axi4_master_translator_m0_arprot;   // mgc_axi4_master_0_altera_axi4_master_translator:m0_arprot -> intel_noc_initiator_0_s0_axi4_translator:s0_arprot
	wire    [2:0] mgc_axi4_master_0_altera_axi4_master_translator_m0_awprot;   // mgc_axi4_master_0_altera_axi4_master_translator:m0_awprot -> intel_noc_initiator_0_s0_axi4_translator:s0_awprot
	wire  [255:0] mgc_axi4_master_0_altera_axi4_master_translator_m0_wdata;    // mgc_axi4_master_0_altera_axi4_master_translator:m0_wdata -> intel_noc_initiator_0_s0_axi4_translator:s0_wdata
	wire          mgc_axi4_master_0_altera_axi4_master_translator_m0_arvalid;  // mgc_axi4_master_0_altera_axi4_master_translator:m0_arvalid -> intel_noc_initiator_0_s0_axi4_translator:s0_arvalid
	wire    [3:0] mgc_axi4_master_0_altera_axi4_master_translator_m0_awcache;  // mgc_axi4_master_0_altera_axi4_master_translator:m0_awcache -> intel_noc_initiator_0_s0_axi4_translator:s0_awcache
	wire    [6:0] mgc_axi4_master_0_altera_axi4_master_translator_m0_arid;     // mgc_axi4_master_0_altera_axi4_master_translator:m0_arid -> intel_noc_initiator_0_s0_axi4_translator:s0_arid
	wire    [0:0] mgc_axi4_master_0_altera_axi4_master_translator_m0_arlock;   // mgc_axi4_master_0_altera_axi4_master_translator:m0_arlock -> intel_noc_initiator_0_s0_axi4_translator:s0_arlock
	wire    [0:0] mgc_axi4_master_0_altera_axi4_master_translator_m0_awlock;   // mgc_axi4_master_0_altera_axi4_master_translator:m0_awlock -> intel_noc_initiator_0_s0_axi4_translator:s0_awlock
	wire   [63:0] mgc_axi4_master_0_altera_axi4_master_translator_m0_awaddr;   // mgc_axi4_master_0_altera_axi4_master_translator:m0_awaddr -> intel_noc_initiator_0_s0_axi4_translator:s0_awaddr
	wire    [1:0] mgc_axi4_master_0_altera_axi4_master_translator_m0_bresp;    // intel_noc_initiator_0_s0_axi4_translator:s0_bresp -> mgc_axi4_master_0_altera_axi4_master_translator:m0_bresp
	wire          mgc_axi4_master_0_altera_axi4_master_translator_m0_arready;  // intel_noc_initiator_0_s0_axi4_translator:s0_arready -> mgc_axi4_master_0_altera_axi4_master_translator:m0_arready
	wire  [255:0] mgc_axi4_master_0_altera_axi4_master_translator_m0_rdata;    // intel_noc_initiator_0_s0_axi4_translator:s0_rdata -> mgc_axi4_master_0_altera_axi4_master_translator:m0_rdata
	wire          mgc_axi4_master_0_altera_axi4_master_translator_m0_awready;  // intel_noc_initiator_0_s0_axi4_translator:s0_awready -> mgc_axi4_master_0_altera_axi4_master_translator:m0_awready
	wire    [1:0] mgc_axi4_master_0_altera_axi4_master_translator_m0_arburst;  // mgc_axi4_master_0_altera_axi4_master_translator:m0_arburst -> intel_noc_initiator_0_s0_axi4_translator:s0_arburst
	wire    [2:0] mgc_axi4_master_0_altera_axi4_master_translator_m0_arsize;   // mgc_axi4_master_0_altera_axi4_master_translator:m0_arsize -> intel_noc_initiator_0_s0_axi4_translator:s0_arsize
	wire          mgc_axi4_master_0_altera_axi4_master_translator_m0_bready;   // mgc_axi4_master_0_altera_axi4_master_translator:m0_bready -> intel_noc_initiator_0_s0_axi4_translator:s0_bready
	wire          mgc_axi4_master_0_altera_axi4_master_translator_m0_rlast;    // intel_noc_initiator_0_s0_axi4_translator:s0_rlast -> mgc_axi4_master_0_altera_axi4_master_translator:m0_rlast
	wire          mgc_axi4_master_0_altera_axi4_master_translator_m0_wlast;    // mgc_axi4_master_0_altera_axi4_master_translator:m0_wlast -> intel_noc_initiator_0_s0_axi4_translator:s0_wlast
	wire    [3:0] mgc_axi4_master_0_altera_axi4_master_translator_m0_awregion; // mgc_axi4_master_0_altera_axi4_master_translator:m0_awregion -> intel_noc_initiator_0_s0_axi4_translator:s0_awregion
	wire   [31:0] mgc_axi4_master_0_altera_axi4_master_translator_m0_buser;    // intel_noc_initiator_0_s0_axi4_translator:s0_buser -> mgc_axi4_master_0_altera_axi4_master_translator:m0_buser
	wire    [1:0] mgc_axi4_master_0_altera_axi4_master_translator_m0_rresp;    // intel_noc_initiator_0_s0_axi4_translator:s0_rresp -> mgc_axi4_master_0_altera_axi4_master_translator:m0_rresp
	wire    [6:0] mgc_axi4_master_0_altera_axi4_master_translator_m0_awid;     // mgc_axi4_master_0_altera_axi4_master_translator:m0_awid -> intel_noc_initiator_0_s0_axi4_translator:s0_awid
	wire    [6:0] mgc_axi4_master_0_altera_axi4_master_translator_m0_bid;      // intel_noc_initiator_0_s0_axi4_translator:s0_bid -> mgc_axi4_master_0_altera_axi4_master_translator:m0_bid
	wire          mgc_axi4_master_0_altera_axi4_master_translator_m0_bvalid;   // intel_noc_initiator_0_s0_axi4_translator:s0_bvalid -> mgc_axi4_master_0_altera_axi4_master_translator:m0_bvalid
	wire    [2:0] mgc_axi4_master_0_altera_axi4_master_translator_m0_awsize;   // mgc_axi4_master_0_altera_axi4_master_translator:m0_awsize -> intel_noc_initiator_0_s0_axi4_translator:s0_awsize
	wire          mgc_axi4_master_0_altera_axi4_master_translator_m0_awvalid;  // mgc_axi4_master_0_altera_axi4_master_translator:m0_awvalid -> intel_noc_initiator_0_s0_axi4_translator:s0_awvalid
	wire   [10:0] mgc_axi4_master_0_altera_axi4_master_translator_m0_aruser;   // mgc_axi4_master_0_altera_axi4_master_translator:m0_aruser -> intel_noc_initiator_0_s0_axi4_translator:s0_aruser
	wire          mgc_axi4_master_0_altera_axi4_master_translator_m0_rvalid;   // intel_noc_initiator_0_s0_axi4_translator:s0_rvalid -> mgc_axi4_master_0_altera_axi4_master_translator:m0_rvalid

	my_sys_altera_merlin_axi_translator_1921_uetfduq #(
		.USE_S0_AWID                       (1),
		.USE_S0_AWREGION                   (1),
		.USE_M0_AWREGION                   (1),
		.USE_S0_AWLEN                      (1),
		.USE_S0_AWSIZE                     (1),
		.USE_S0_AWBURST                    (1),
		.USE_S0_AWLOCK                     (1),
		.USE_M0_AWLOCK                     (1),
		.USE_S0_AWCACHE                    (0),
		.USE_M0_AWCACHE                    (1),
		.USE_M0_AWPROT                     (1),
		.USE_S0_AWQOS                      (1),
		.USE_M0_AWQOS                      (1),
		.USE_S0_WSTRB                      (1),
		.USE_M0_WLAST                      (1),
		.USE_S0_BID                        (1),
		.USE_S0_BRESP                      (1),
		.USE_M0_BRESP                      (1),
		.USE_S0_ARID                       (1),
		.USE_S0_ARREGION                   (1),
		.USE_M0_ARREGION                   (1),
		.USE_S0_ARLEN                      (1),
		.USE_S0_ARSIZE                     (1),
		.USE_S0_ARBURST                    (1),
		.USE_S0_ARLOCK                     (1),
		.USE_M0_ARLOCK                     (1),
		.USE_M0_ARCACHE                    (1),
		.USE_M0_ARQOS                      (1),
		.USE_M0_ARPROT                     (1),
		.USE_S0_ARCACHE                    (0),
		.USE_S0_ARQOS                      (1),
		.USE_S0_RID                        (1),
		.USE_S0_RRESP                      (1),
		.USE_M0_RRESP                      (1),
		.USE_S0_RLAST                      (1),
		.M0_ID_WIDTH                       (7),
		.DATA_WIDTH                        (256),
		.S0_ID_WIDTH                       (7),
		.M0_ADDR_WIDTH                     (64),
		.S0_WRITE_ADDR_USER_WIDTH          (8),
		.S0_READ_ADDR_USER_WIDTH           (8),
		.M0_WRITE_ADDR_USER_WIDTH          (11),
		.M0_READ_ADDR_USER_WIDTH           (11),
		.S0_WRITE_DATA_USER_WIDTH          (8),
		.S0_WRITE_RESPONSE_DATA_USER_WIDTH (1),
		.S0_READ_DATA_USER_WIDTH           (8),
		.M0_WRITE_DATA_USER_WIDTH          (32),
		.M0_WRITE_RESPONSE_DATA_USER_WIDTH (32),
		.M0_READ_DATA_USER_WIDTH           (32),
		.S0_ADDR_WIDTH                     (64),
		.USE_S0_AWUSER                     (1),
		.USE_S0_ARUSER                     (1),
		.USE_S0_WUSER                      (1),
		.USE_S0_RUSER                      (1),
		.USE_S0_BUSER                      (0),
		.USE_M0_AWUSER                     (1),
		.USE_M0_ARUSER                     (1),
		.USE_M0_WUSER                      (1),
		.USE_M0_RUSER                      (1),
		.USE_M0_BUSER                      (1),
		.M0_AXI_VERSION                    ("AXI4"),
		.M0_BURST_LENGTH_WIDTH             (8),
		.S0_BURST_LENGTH_WIDTH             (8),
		.M0_LOCK_WIDTH                     (1),
		.S0_LOCK_WIDTH                     (1),
		.S0_AXI_VERSION                    ("AXI4"),
		.ACE_LITE_SUPPORT                  (0)
	) mgc_axi4_master_0_altera_axi4_master_translator (
		.aclk        (iopll_0_outclk0_clk),                                                                    //   input,    width = 1,       clk.clk
		.aresetn     (~mgc_axi4_master_0_altera_axi4_master_translator_clk_reset_reset_bridge_in_reset_reset), //   input,    width = 1, clk_reset.reset_n
		.m0_awid     (mgc_axi4_master_0_altera_axi4_master_translator_m0_awid),                                //  output,    width = 7,        m0.awid
		.m0_awaddr   (mgc_axi4_master_0_altera_axi4_master_translator_m0_awaddr),                              //  output,   width = 64,          .awaddr
		.m0_awlen    (mgc_axi4_master_0_altera_axi4_master_translator_m0_awlen),                               //  output,    width = 8,          .awlen
		.m0_awsize   (mgc_axi4_master_0_altera_axi4_master_translator_m0_awsize),                              //  output,    width = 3,          .awsize
		.m0_awburst  (mgc_axi4_master_0_altera_axi4_master_translator_m0_awburst),                             //  output,    width = 2,          .awburst
		.m0_awlock   (mgc_axi4_master_0_altera_axi4_master_translator_m0_awlock),                              //  output,    width = 1,          .awlock
		.m0_awcache  (mgc_axi4_master_0_altera_axi4_master_translator_m0_awcache),                             //  output,    width = 4,          .awcache
		.m0_awprot   (mgc_axi4_master_0_altera_axi4_master_translator_m0_awprot),                              //  output,    width = 3,          .awprot
		.m0_awuser   (mgc_axi4_master_0_altera_axi4_master_translator_m0_awuser),                              //  output,   width = 11,          .awuser
		.m0_awqos    (mgc_axi4_master_0_altera_axi4_master_translator_m0_awqos),                               //  output,    width = 4,          .awqos
		.m0_awregion (mgc_axi4_master_0_altera_axi4_master_translator_m0_awregion),                            //  output,    width = 4,          .awregion
		.m0_awvalid  (mgc_axi4_master_0_altera_axi4_master_translator_m0_awvalid),                             //  output,    width = 1,          .awvalid
		.m0_awready  (mgc_axi4_master_0_altera_axi4_master_translator_m0_awready),                             //   input,    width = 1,          .awready
		.m0_wdata    (mgc_axi4_master_0_altera_axi4_master_translator_m0_wdata),                               //  output,  width = 256,          .wdata
		.m0_wstrb    (mgc_axi4_master_0_altera_axi4_master_translator_m0_wstrb),                               //  output,   width = 32,          .wstrb
		.m0_wlast    (mgc_axi4_master_0_altera_axi4_master_translator_m0_wlast),                               //  output,    width = 1,          .wlast
		.m0_wvalid   (mgc_axi4_master_0_altera_axi4_master_translator_m0_wvalid),                              //  output,    width = 1,          .wvalid
		.m0_wuser    (mgc_axi4_master_0_altera_axi4_master_translator_m0_wuser),                               //  output,   width = 32,          .wuser
		.m0_wready   (mgc_axi4_master_0_altera_axi4_master_translator_m0_wready),                              //   input,    width = 1,          .wready
		.m0_bid      (mgc_axi4_master_0_altera_axi4_master_translator_m0_bid),                                 //   input,    width = 7,          .bid
		.m0_bresp    (mgc_axi4_master_0_altera_axi4_master_translator_m0_bresp),                               //   input,    width = 2,          .bresp
		.m0_buser    (mgc_axi4_master_0_altera_axi4_master_translator_m0_buser),                               //   input,   width = 32,          .buser
		.m0_bvalid   (mgc_axi4_master_0_altera_axi4_master_translator_m0_bvalid),                              //   input,    width = 1,          .bvalid
		.m0_bready   (mgc_axi4_master_0_altera_axi4_master_translator_m0_bready),                              //  output,    width = 1,          .bready
		.m0_arid     (mgc_axi4_master_0_altera_axi4_master_translator_m0_arid),                                //  output,    width = 7,          .arid
		.m0_araddr   (mgc_axi4_master_0_altera_axi4_master_translator_m0_araddr),                              //  output,   width = 64,          .araddr
		.m0_arlen    (mgc_axi4_master_0_altera_axi4_master_translator_m0_arlen),                               //  output,    width = 8,          .arlen
		.m0_arsize   (mgc_axi4_master_0_altera_axi4_master_translator_m0_arsize),                              //  output,    width = 3,          .arsize
		.m0_arburst  (mgc_axi4_master_0_altera_axi4_master_translator_m0_arburst),                             //  output,    width = 2,          .arburst
		.m0_arlock   (mgc_axi4_master_0_altera_axi4_master_translator_m0_arlock),                              //  output,    width = 1,          .arlock
		.m0_arcache  (mgc_axi4_master_0_altera_axi4_master_translator_m0_arcache),                             //  output,    width = 4,          .arcache
		.m0_arprot   (mgc_axi4_master_0_altera_axi4_master_translator_m0_arprot),                              //  output,    width = 3,          .arprot
		.m0_aruser   (mgc_axi4_master_0_altera_axi4_master_translator_m0_aruser),                              //  output,   width = 11,          .aruser
		.m0_arqos    (mgc_axi4_master_0_altera_axi4_master_translator_m0_arqos),                               //  output,    width = 4,          .arqos
		.m0_arregion (mgc_axi4_master_0_altera_axi4_master_translator_m0_arregion),                            //  output,    width = 4,          .arregion
		.m0_arvalid  (mgc_axi4_master_0_altera_axi4_master_translator_m0_arvalid),                             //  output,    width = 1,          .arvalid
		.m0_arready  (mgc_axi4_master_0_altera_axi4_master_translator_m0_arready),                             //   input,    width = 1,          .arready
		.m0_rid      (mgc_axi4_master_0_altera_axi4_master_translator_m0_rid),                                 //   input,    width = 7,          .rid
		.m0_rdata    (mgc_axi4_master_0_altera_axi4_master_translator_m0_rdata),                               //   input,  width = 256,          .rdata
		.m0_rresp    (mgc_axi4_master_0_altera_axi4_master_translator_m0_rresp),                               //   input,    width = 2,          .rresp
		.m0_rlast    (mgc_axi4_master_0_altera_axi4_master_translator_m0_rlast),                               //   input,    width = 1,          .rlast
		.m0_rvalid   (mgc_axi4_master_0_altera_axi4_master_translator_m0_rvalid),                              //   input,    width = 1,          .rvalid
		.m0_rready   (mgc_axi4_master_0_altera_axi4_master_translator_m0_rready),                              //  output,    width = 1,          .rready
		.m0_ruser    (mgc_axi4_master_0_altera_axi4_master_translator_m0_ruser),                               //   input,   width = 32,          .ruser
		.s0_awid     (mgc_axi4_master_0_altera_axi4_master_awid),                                              //   input,    width = 7,        s0.awid
		.s0_awaddr   (mgc_axi4_master_0_altera_axi4_master_awaddr),                                            //   input,   width = 64,          .awaddr
		.s0_awlen    (mgc_axi4_master_0_altera_axi4_master_awlen),                                             //   input,    width = 8,          .awlen
		.s0_awsize   (mgc_axi4_master_0_altera_axi4_master_awsize),                                            //   input,    width = 3,          .awsize
		.s0_awburst  (mgc_axi4_master_0_altera_axi4_master_awburst),                                           //   input,    width = 2,          .awburst
		.s0_awlock   (mgc_axi4_master_0_altera_axi4_master_awlock),                                            //   input,    width = 1,          .awlock
		.s0_awprot   (mgc_axi4_master_0_altera_axi4_master_awprot),                                            //   input,    width = 3,          .awprot
		.s0_awuser   (mgc_axi4_master_0_altera_axi4_master_awuser),                                            //   input,    width = 8,          .awuser
		.s0_awqos    (mgc_axi4_master_0_altera_axi4_master_awqos),                                             //   input,    width = 4,          .awqos
		.s0_awregion (mgc_axi4_master_0_altera_axi4_master_awregion),                                          //   input,    width = 4,          .awregion
		.s0_awvalid  (mgc_axi4_master_0_altera_axi4_master_awvalid),                                           //   input,    width = 1,          .awvalid
		.s0_awready  (mgc_axi4_master_0_altera_axi4_master_awready),                                           //  output,    width = 1,          .awready
		.s0_wdata    (mgc_axi4_master_0_altera_axi4_master_wdata),                                             //   input,  width = 256,          .wdata
		.s0_wstrb    (mgc_axi4_master_0_altera_axi4_master_wstrb),                                             //   input,   width = 32,          .wstrb
		.s0_wlast    (mgc_axi4_master_0_altera_axi4_master_wlast),                                             //   input,    width = 1,          .wlast
		.s0_wvalid   (mgc_axi4_master_0_altera_axi4_master_wvalid),                                            //   input,    width = 1,          .wvalid
		.s0_wuser    (mgc_axi4_master_0_altera_axi4_master_wuser),                                             //   input,    width = 8,          .wuser
		.s0_wready   (mgc_axi4_master_0_altera_axi4_master_wready),                                            //  output,    width = 1,          .wready
		.s0_bid      (mgc_axi4_master_0_altera_axi4_master_bid),                                               //  output,    width = 7,          .bid
		.s0_bresp    (mgc_axi4_master_0_altera_axi4_master_bresp),                                             //  output,    width = 2,          .bresp
		.s0_bvalid   (mgc_axi4_master_0_altera_axi4_master_bvalid),                                            //  output,    width = 1,          .bvalid
		.s0_bready   (mgc_axi4_master_0_altera_axi4_master_bready),                                            //   input,    width = 1,          .bready
		.s0_arid     (mgc_axi4_master_0_altera_axi4_master_arid),                                              //   input,    width = 7,          .arid
		.s0_araddr   (mgc_axi4_master_0_altera_axi4_master_araddr),                                            //   input,   width = 64,          .araddr
		.s0_arlen    (mgc_axi4_master_0_altera_axi4_master_arlen),                                             //   input,    width = 8,          .arlen
		.s0_arsize   (mgc_axi4_master_0_altera_axi4_master_arsize),                                            //   input,    width = 3,          .arsize
		.s0_arburst  (mgc_axi4_master_0_altera_axi4_master_arburst),                                           //   input,    width = 2,          .arburst
		.s0_arlock   (mgc_axi4_master_0_altera_axi4_master_arlock),                                            //   input,    width = 1,          .arlock
		.s0_arprot   (mgc_axi4_master_0_altera_axi4_master_arprot),                                            //   input,    width = 3,          .arprot
		.s0_aruser   (mgc_axi4_master_0_altera_axi4_master_aruser),                                            //   input,    width = 8,          .aruser
		.s0_arqos    (mgc_axi4_master_0_altera_axi4_master_arqos),                                             //   input,    width = 4,          .arqos
		.s0_arregion (mgc_axi4_master_0_altera_axi4_master_arregion),                                          //   input,    width = 4,          .arregion
		.s0_arvalid  (mgc_axi4_master_0_altera_axi4_master_arvalid),                                           //   input,    width = 1,          .arvalid
		.s0_arready  (mgc_axi4_master_0_altera_axi4_master_arready),                                           //  output,    width = 1,          .arready
		.s0_rid      (mgc_axi4_master_0_altera_axi4_master_rid),                                               //  output,    width = 7,          .rid
		.s0_rdata    (mgc_axi4_master_0_altera_axi4_master_rdata),                                             //  output,  width = 256,          .rdata
		.s0_rresp    (mgc_axi4_master_0_altera_axi4_master_rresp),                                             //  output,    width = 2,          .rresp
		.s0_rlast    (mgc_axi4_master_0_altera_axi4_master_rlast),                                             //  output,    width = 1,          .rlast
		.s0_rvalid   (mgc_axi4_master_0_altera_axi4_master_rvalid),                                            //  output,    width = 1,          .rvalid
		.s0_rready   (mgc_axi4_master_0_altera_axi4_master_rready),                                            //   input,    width = 1,          .rready
		.s0_ruser    (mgc_axi4_master_0_altera_axi4_master_ruser),                                             //  output,    width = 8,          .ruser
		.s0_awcache  (4'b0000),                                                                                // (terminated),                         
		.s0_buser    (),                                                                                       // (terminated),                         
		.s0_arcache  (4'b0000),                                                                                // (terminated),                         
		.s0_wid      (7'b0000000),                                                                             // (terminated),                         
		.s0_ardomain (2'b00),                                                                                  // (terminated),                         
		.s0_arsnoop  (4'b0000),                                                                                // (terminated),                         
		.s0_arbar    (2'b00),                                                                                  // (terminated),                         
		.s0_awdomain (2'b00),                                                                                  // (terminated),                         
		.s0_awsnoop  (3'b000),                                                                                 // (terminated),                         
		.s0_awbar    (2'b00),                                                                                  // (terminated),                         
		.s0_awunique (1'b0),                                                                                   // (terminated),                         
		.m0_wid      (),                                                                                       // (terminated),                         
		.m0_ardomain (),                                                                                       // (terminated),                         
		.m0_arsnoop  (),                                                                                       // (terminated),                         
		.m0_arbar    (),                                                                                       // (terminated),                         
		.m0_awdomain (),                                                                                       // (terminated),                         
		.m0_awsnoop  (),                                                                                       // (terminated),                         
		.m0_awbar    (),                                                                                       // (terminated),                         
		.m0_awunique ()                                                                                        // (terminated),                         
	);

	my_sys_altera_merlin_axi_translator_1921_uetfduq #(
		.USE_S0_AWID                       (1),
		.USE_S0_AWREGION                   (1),
		.USE_M0_AWREGION                   (0),
		.USE_S0_AWLEN                      (1),
		.USE_S0_AWSIZE                     (1),
		.USE_S0_AWBURST                    (1),
		.USE_S0_AWLOCK                     (1),
		.USE_M0_AWLOCK                     (1),
		.USE_S0_AWCACHE                    (1),
		.USE_M0_AWCACHE                    (0),
		.USE_M0_AWPROT                     (1),
		.USE_S0_AWQOS                      (1),
		.USE_M0_AWQOS                      (1),
		.USE_S0_WSTRB                      (1),
		.USE_M0_WLAST                      (1),
		.USE_S0_BID                        (1),
		.USE_S0_BRESP                      (1),
		.USE_M0_BRESP                      (1),
		.USE_S0_ARID                       (1),
		.USE_S0_ARREGION                   (1),
		.USE_M0_ARREGION                   (0),
		.USE_S0_ARLEN                      (1),
		.USE_S0_ARSIZE                     (1),
		.USE_S0_ARBURST                    (1),
		.USE_S0_ARLOCK                     (1),
		.USE_M0_ARLOCK                     (1),
		.USE_M0_ARCACHE                    (0),
		.USE_M0_ARQOS                      (1),
		.USE_M0_ARPROT                     (1),
		.USE_S0_ARCACHE                    (1),
		.USE_S0_ARQOS                      (1),
		.USE_S0_RID                        (1),
		.USE_S0_RRESP                      (1),
		.USE_M0_RRESP                      (1),
		.USE_S0_RLAST                      (1),
		.M0_ID_WIDTH                       (7),
		.DATA_WIDTH                        (256),
		.S0_ID_WIDTH                       (7),
		.M0_ADDR_WIDTH                     (44),
		.S0_WRITE_ADDR_USER_WIDTH          (11),
		.S0_READ_ADDR_USER_WIDTH           (11),
		.M0_WRITE_ADDR_USER_WIDTH          (11),
		.M0_READ_ADDR_USER_WIDTH           (11),
		.S0_WRITE_DATA_USER_WIDTH          (32),
		.S0_WRITE_RESPONSE_DATA_USER_WIDTH (32),
		.S0_READ_DATA_USER_WIDTH           (32),
		.M0_WRITE_DATA_USER_WIDTH          (32),
		.M0_WRITE_RESPONSE_DATA_USER_WIDTH (1),
		.M0_READ_DATA_USER_WIDTH           (32),
		.S0_ADDR_WIDTH                     (64),
		.USE_S0_AWUSER                     (1),
		.USE_S0_ARUSER                     (1),
		.USE_S0_WUSER                      (1),
		.USE_S0_RUSER                      (1),
		.USE_S0_BUSER                      (1),
		.USE_M0_AWUSER                     (1),
		.USE_M0_ARUSER                     (1),
		.USE_M0_WUSER                      (1),
		.USE_M0_RUSER                      (1),
		.USE_M0_BUSER                      (0),
		.M0_AXI_VERSION                    ("AXI4"),
		.M0_BURST_LENGTH_WIDTH             (8),
		.S0_BURST_LENGTH_WIDTH             (8),
		.M0_LOCK_WIDTH                     (1),
		.S0_LOCK_WIDTH                     (1),
		.S0_AXI_VERSION                    ("AXI4"),
		.ACE_LITE_SUPPORT                  (0)
	) intel_noc_initiator_0_s0_axi4_translator (
		.aclk        (iopll_0_outclk0_clk),                                                             //   input,    width = 1,       clk.clk
		.aresetn     (~intel_noc_initiator_0_s0_axi4_translator_clk_reset_reset_bridge_in_reset_reset), //   input,    width = 1, clk_reset.reset_n
		.m0_awid     (intel_noc_initiator_0_s0_axi4_awid),                                              //  output,    width = 7,        m0.awid
		.m0_awaddr   (intel_noc_initiator_0_s0_axi4_awaddr),                                            //  output,   width = 44,          .awaddr
		.m0_awlen    (intel_noc_initiator_0_s0_axi4_awlen),                                             //  output,    width = 8,          .awlen
		.m0_awsize   (intel_noc_initiator_0_s0_axi4_awsize),                                            //  output,    width = 3,          .awsize
		.m0_awburst  (intel_noc_initiator_0_s0_axi4_awburst),                                           //  output,    width = 2,          .awburst
		.m0_awlock   (intel_noc_initiator_0_s0_axi4_awlock),                                            //  output,    width = 1,          .awlock
		.m0_awprot   (intel_noc_initiator_0_s0_axi4_awprot),                                            //  output,    width = 3,          .awprot
		.m0_awuser   (intel_noc_initiator_0_s0_axi4_awuser),                                            //  output,   width = 11,          .awuser
		.m0_awqos    (intel_noc_initiator_0_s0_axi4_awqos),                                             //  output,    width = 4,          .awqos
		.m0_awvalid  (intel_noc_initiator_0_s0_axi4_awvalid),                                           //  output,    width = 1,          .awvalid
		.m0_awready  (intel_noc_initiator_0_s0_axi4_awready),                                           //   input,    width = 1,          .awready
		.m0_wdata    (intel_noc_initiator_0_s0_axi4_wdata),                                             //  output,  width = 256,          .wdata
		.m0_wstrb    (intel_noc_initiator_0_s0_axi4_wstrb),                                             //  output,   width = 32,          .wstrb
		.m0_wlast    (intel_noc_initiator_0_s0_axi4_wlast),                                             //  output,    width = 1,          .wlast
		.m0_wvalid   (intel_noc_initiator_0_s0_axi4_wvalid),                                            //  output,    width = 1,          .wvalid
		.m0_wuser    (intel_noc_initiator_0_s0_axi4_wuser),                                             //  output,   width = 32,          .wuser
		.m0_wready   (intel_noc_initiator_0_s0_axi4_wready),                                            //   input,    width = 1,          .wready
		.m0_bid      (intel_noc_initiator_0_s0_axi4_bid),                                               //   input,    width = 7,          .bid
		.m0_bresp    (intel_noc_initiator_0_s0_axi4_bresp),                                             //   input,    width = 2,          .bresp
		.m0_bvalid   (intel_noc_initiator_0_s0_axi4_bvalid),                                            //   input,    width = 1,          .bvalid
		.m0_bready   (intel_noc_initiator_0_s0_axi4_bready),                                            //  output,    width = 1,          .bready
		.m0_arid     (intel_noc_initiator_0_s0_axi4_arid),                                              //  output,    width = 7,          .arid
		.m0_araddr   (intel_noc_initiator_0_s0_axi4_araddr),                                            //  output,   width = 44,          .araddr
		.m0_arlen    (intel_noc_initiator_0_s0_axi4_arlen),                                             //  output,    width = 8,          .arlen
		.m0_arsize   (intel_noc_initiator_0_s0_axi4_arsize),                                            //  output,    width = 3,          .arsize
		.m0_arburst  (intel_noc_initiator_0_s0_axi4_arburst),                                           //  output,    width = 2,          .arburst
		.m0_arlock   (intel_noc_initiator_0_s0_axi4_arlock),                                            //  output,    width = 1,          .arlock
		.m0_arprot   (intel_noc_initiator_0_s0_axi4_arprot),                                            //  output,    width = 3,          .arprot
		.m0_aruser   (intel_noc_initiator_0_s0_axi4_aruser),                                            //  output,   width = 11,          .aruser
		.m0_arqos    (intel_noc_initiator_0_s0_axi4_arqos),                                             //  output,    width = 4,          .arqos
		.m0_arvalid  (intel_noc_initiator_0_s0_axi4_arvalid),                                           //  output,    width = 1,          .arvalid
		.m0_arready  (intel_noc_initiator_0_s0_axi4_arready),                                           //   input,    width = 1,          .arready
		.m0_rid      (intel_noc_initiator_0_s0_axi4_rid),                                               //   input,    width = 7,          .rid
		.m0_rdata    (intel_noc_initiator_0_s0_axi4_rdata),                                             //   input,  width = 256,          .rdata
		.m0_rresp    (intel_noc_initiator_0_s0_axi4_rresp),                                             //   input,    width = 2,          .rresp
		.m0_rlast    (intel_noc_initiator_0_s0_axi4_rlast),                                             //   input,    width = 1,          .rlast
		.m0_rvalid   (intel_noc_initiator_0_s0_axi4_rvalid),                                            //   input,    width = 1,          .rvalid
		.m0_rready   (intel_noc_initiator_0_s0_axi4_rready),                                            //  output,    width = 1,          .rready
		.m0_ruser    (intel_noc_initiator_0_s0_axi4_ruser),                                             //   input,   width = 32,          .ruser
		.s0_awid     (mgc_axi4_master_0_altera_axi4_master_translator_m0_awid),                         //   input,    width = 7,        s0.awid
		.s0_awaddr   (mgc_axi4_master_0_altera_axi4_master_translator_m0_awaddr),                       //   input,   width = 64,          .awaddr
		.s0_awlen    (mgc_axi4_master_0_altera_axi4_master_translator_m0_awlen),                        //   input,    width = 8,          .awlen
		.s0_awsize   (mgc_axi4_master_0_altera_axi4_master_translator_m0_awsize),                       //   input,    width = 3,          .awsize
		.s0_awburst  (mgc_axi4_master_0_altera_axi4_master_translator_m0_awburst),                      //   input,    width = 2,          .awburst
		.s0_awlock   (mgc_axi4_master_0_altera_axi4_master_translator_m0_awlock),                       //   input,    width = 1,          .awlock
		.s0_awcache  (mgc_axi4_master_0_altera_axi4_master_translator_m0_awcache),                      //   input,    width = 4,          .awcache
		.s0_awprot   (mgc_axi4_master_0_altera_axi4_master_translator_m0_awprot),                       //   input,    width = 3,          .awprot
		.s0_awuser   (mgc_axi4_master_0_altera_axi4_master_translator_m0_awuser),                       //   input,   width = 11,          .awuser
		.s0_awqos    (mgc_axi4_master_0_altera_axi4_master_translator_m0_awqos),                        //   input,    width = 4,          .awqos
		.s0_awregion (mgc_axi4_master_0_altera_axi4_master_translator_m0_awregion),                     //   input,    width = 4,          .awregion
		.s0_awvalid  (mgc_axi4_master_0_altera_axi4_master_translator_m0_awvalid),                      //   input,    width = 1,          .awvalid
		.s0_awready  (mgc_axi4_master_0_altera_axi4_master_translator_m0_awready),                      //  output,    width = 1,          .awready
		.s0_wdata    (mgc_axi4_master_0_altera_axi4_master_translator_m0_wdata),                        //   input,  width = 256,          .wdata
		.s0_wstrb    (mgc_axi4_master_0_altera_axi4_master_translator_m0_wstrb),                        //   input,   width = 32,          .wstrb
		.s0_wlast    (mgc_axi4_master_0_altera_axi4_master_translator_m0_wlast),                        //   input,    width = 1,          .wlast
		.s0_wvalid   (mgc_axi4_master_0_altera_axi4_master_translator_m0_wvalid),                       //   input,    width = 1,          .wvalid
		.s0_wuser    (mgc_axi4_master_0_altera_axi4_master_translator_m0_wuser),                        //   input,   width = 32,          .wuser
		.s0_wready   (mgc_axi4_master_0_altera_axi4_master_translator_m0_wready),                       //  output,    width = 1,          .wready
		.s0_bid      (mgc_axi4_master_0_altera_axi4_master_translator_m0_bid),                          //  output,    width = 7,          .bid
		.s0_bresp    (mgc_axi4_master_0_altera_axi4_master_translator_m0_bresp),                        //  output,    width = 2,          .bresp
		.s0_buser    (mgc_axi4_master_0_altera_axi4_master_translator_m0_buser),                        //  output,   width = 32,          .buser
		.s0_bvalid   (mgc_axi4_master_0_altera_axi4_master_translator_m0_bvalid),                       //  output,    width = 1,          .bvalid
		.s0_bready   (mgc_axi4_master_0_altera_axi4_master_translator_m0_bready),                       //   input,    width = 1,          .bready
		.s0_arid     (mgc_axi4_master_0_altera_axi4_master_translator_m0_arid),                         //   input,    width = 7,          .arid
		.s0_araddr   (mgc_axi4_master_0_altera_axi4_master_translator_m0_araddr),                       //   input,   width = 64,          .araddr
		.s0_arlen    (mgc_axi4_master_0_altera_axi4_master_translator_m0_arlen),                        //   input,    width = 8,          .arlen
		.s0_arsize   (mgc_axi4_master_0_altera_axi4_master_translator_m0_arsize),                       //   input,    width = 3,          .arsize
		.s0_arburst  (mgc_axi4_master_0_altera_axi4_master_translator_m0_arburst),                      //   input,    width = 2,          .arburst
		.s0_arlock   (mgc_axi4_master_0_altera_axi4_master_translator_m0_arlock),                       //   input,    width = 1,          .arlock
		.s0_arcache  (mgc_axi4_master_0_altera_axi4_master_translator_m0_arcache),                      //   input,    width = 4,          .arcache
		.s0_arprot   (mgc_axi4_master_0_altera_axi4_master_translator_m0_arprot),                       //   input,    width = 3,          .arprot
		.s0_aruser   (mgc_axi4_master_0_altera_axi4_master_translator_m0_aruser),                       //   input,   width = 11,          .aruser
		.s0_arqos    (mgc_axi4_master_0_altera_axi4_master_translator_m0_arqos),                        //   input,    width = 4,          .arqos
		.s0_arregion (mgc_axi4_master_0_altera_axi4_master_translator_m0_arregion),                     //   input,    width = 4,          .arregion
		.s0_arvalid  (mgc_axi4_master_0_altera_axi4_master_translator_m0_arvalid),                      //   input,    width = 1,          .arvalid
		.s0_arready  (mgc_axi4_master_0_altera_axi4_master_translator_m0_arready),                      //  output,    width = 1,          .arready
		.s0_rid      (mgc_axi4_master_0_altera_axi4_master_translator_m0_rid),                          //  output,    width = 7,          .rid
		.s0_rdata    (mgc_axi4_master_0_altera_axi4_master_translator_m0_rdata),                        //  output,  width = 256,          .rdata
		.s0_rresp    (mgc_axi4_master_0_altera_axi4_master_translator_m0_rresp),                        //  output,    width = 2,          .rresp
		.s0_rlast    (mgc_axi4_master_0_altera_axi4_master_translator_m0_rlast),                        //  output,    width = 1,          .rlast
		.s0_rvalid   (mgc_axi4_master_0_altera_axi4_master_translator_m0_rvalid),                       //  output,    width = 1,          .rvalid
		.s0_rready   (mgc_axi4_master_0_altera_axi4_master_translator_m0_rready),                       //   input,    width = 1,          .rready
		.s0_ruser    (mgc_axi4_master_0_altera_axi4_master_translator_m0_ruser),                        //  output,   width = 32,          .ruser
		.m0_awcache  (),                                                                                // (terminated),                         
		.m0_awregion (),                                                                                // (terminated),                         
		.m0_buser    (1'b0),                                                                            // (terminated),                         
		.m0_arcache  (),                                                                                // (terminated),                         
		.m0_arregion (),                                                                                // (terminated),                         
		.s0_wid      (7'b0000000),                                                                      // (terminated),                         
		.s0_ardomain (2'b00),                                                                           // (terminated),                         
		.s0_arsnoop  (4'b0000),                                                                         // (terminated),                         
		.s0_arbar    (2'b00),                                                                           // (terminated),                         
		.s0_awdomain (2'b00),                                                                           // (terminated),                         
		.s0_awsnoop  (3'b000),                                                                          // (terminated),                         
		.s0_awbar    (2'b00),                                                                           // (terminated),                         
		.s0_awunique (1'b0),                                                                            // (terminated),                         
		.m0_wid      (),                                                                                // (terminated),                         
		.m0_ardomain (),                                                                                // (terminated),                         
		.m0_arsnoop  (),                                                                                // (terminated),                         
		.m0_arbar    (),                                                                                // (terminated),                         
		.m0_awdomain (),                                                                                // (terminated),                         
		.m0_awsnoop  (),                                                                                // (terminated),                         
		.m0_awbar    (),                                                                                // (terminated),                         
		.m0_awunique ()                                                                                 // (terminated),                         
	);

endmodule

module my_sys_intel_noc_initiator_1_intel_axi4_user_adapter_110_ierbsva #(
   parameter WRITE_FENCE_CYC                                    = 0,
   parameter WRITE_DRAIN_CYC                                    = 0,
   parameter AXI4_ID_WIDTH                                      = 0,
   parameter AXI4_ADDR_WIDTH                                    = 0,
   parameter AXI4_AXUSER_WIDTH                                  = 0,
   parameter AXI4_DATA_WIDTH                                    = 0,
   parameter WRITE_FENCE_DRAIN_EN                               = 0,
   parameter READ_FENCE_DRAIN_EN                                = 0
) (
   input  logic            s_axi4_aclk,
   input  logic            s_axi4_aresetn,
   input  logic [6:0]      s_axi4_arid,
   input  logic [43:0]     s_axi4_araddr,
   input  logic [7:0]      s_axi4_arlen,
   input  logic [2:0]      s_axi4_arsize,
   input  logic [1:0]      s_axi4_arburst,
   input  logic            s_axi4_arlock,
   input  logic [2:0]      s_axi4_arprot,
   input  logic [3:0]      s_axi4_arqos,
   input  logic [10:0]     s_axi4_aruser,
   input  logic            s_axi4_arvalid,
   output logic            s_axi4_arready,
   output logic [6:0]      s_axi4_rid,
   output logic [255:0]    s_axi4_rdata,
   output logic [1:0]      s_axi4_rresp,
   output logic            s_axi4_rlast,
   output logic [31:0]     s_axi4_ruser,
   output logic            s_axi4_rvalid,
   input  logic            s_axi4_rready,
   input  logic [6:0]      s_axi4_awid,
   input  logic [43:0]     s_axi4_awaddr,
   input  logic [7:0]      s_axi4_awlen,
   input  logic [2:0]      s_axi4_awsize,
   input  logic [1:0]      s_axi4_awburst,
   input  logic            s_axi4_awlock,
   input  logic [2:0]      s_axi4_awprot,
   input  logic [3:0]      s_axi4_awqos,
   input  logic [10:0]     s_axi4_awuser,
   input  logic            s_axi4_awvalid,
   output logic            s_axi4_awready,
   input  logic [255:0]    s_axi4_wdata,
   input  logic [31:0]     s_axi4_wstrb,
   input  logic            s_axi4_wlast,
   input  logic [31:0]     s_axi4_wuser,
   input  logic            s_axi4_wvalid,
   output logic            s_axi4_wready,
   output logic [6:0]      s_axi4_bid,
   output logic [1:0]      s_axi4_bresp,
   output logic            s_axi4_bvalid,
   input  logic            s_axi4_bready,
   input  logic            m_axi4_aclk,
   input  logic            m_axi4_aresetn,
   output logic [6:0]      m_axi4_arid,
   output logic [43:0]     m_axi4_araddr,
   output logic [7:0]      m_axi4_arlen,
   output logic [2:0]      m_axi4_arsize,
   output logic [1:0]      m_axi4_arburst,
   output logic            m_axi4_arlock,
   output logic [2:0]      m_axi4_arprot,
   output logic [3:0]      m_axi4_arqos,
   output logic [10:0]     m_axi4_aruser,
   output logic            m_axi4_arvalid,
   input  logic            m_axi4_arready,
   input  logic [6:0]      m_axi4_rid,
   input  logic [255:0]    m_axi4_rdata,
   input  logic [1:0]      m_axi4_rresp,
   input  logic            m_axi4_rlast,
   input  logic [31:0]     m_axi4_ruser,
   input  logic            m_axi4_rvalid,
   output logic            m_axi4_rready,
   output logic [6:0]      m_axi4_awid,
   output logic [43:0]     m_axi4_awaddr,
   output logic [7:0]      m_axi4_awlen,
   output logic [2:0]      m_axi4_awsize,
   output logic [1:0]      m_axi4_awburst,
   output logic            m_axi4_awlock,
   output logic [2:0]      m_axi4_awprot,
   output logic [3:0]      m_axi4_awqos,
   output logic [10:0]     m_axi4_awuser,
   output logic            m_axi4_awvalid,
   input  logic            m_axi4_awready,
   output logic [255:0]    m_axi4_wdata,
   output logic [31:0]     m_axi4_wstrb,
   output logic            m_axi4_wlast,
   output logic [31:0]     m_axi4_wuser,
   output logic            m_axi4_wvalid,
   input  logic            m_axi4_wready,
   input  logic [6:0]      m_axi4_bid,
   input  logic [1:0]      m_axi4_bresp,
   input  logic            m_axi4_bvalid,
   output logic            m_axi4_bready
);
   timeunit 1ns;
   timeprecision 1ps;

   intel_axi4_user_adapter # (
      .WRITE_FENCE_CYC (WRITE_FENCE_CYC),
      .WRITE_DRAIN_CYC (WRITE_DRAIN_CYC),
      .AXI4_ID_WIDTH (AXI4_ID_WIDTH),
      .AXI4_ADDR_WIDTH (AXI4_ADDR_WIDTH),
      .AXI4_AXUSER_WIDTH (AXI4_AXUSER_WIDTH),
      .AXI4_DATA_WIDTH (AXI4_DATA_WIDTH),
      .WRITE_FENCE_DRAIN_EN (WRITE_FENCE_DRAIN_EN),
      .READ_FENCE_DRAIN_EN (READ_FENCE_DRAIN_EN)
   ) intel_axi4_user_adapter_inst (
      .s_axi4_aclk (s_axi4_aclk),
      .s_axi4_aresetn (s_axi4_aresetn),
      .s_axi4_arid (s_axi4_arid),
      .s_axi4_araddr (s_axi4_araddr),
      .s_axi4_arlen (s_axi4_arlen),
      .s_axi4_arsize (s_axi4_arsize),
      .s_axi4_arburst (s_axi4_arburst),
      .s_axi4_arlock (s_axi4_arlock),
      .s_axi4_arprot (s_axi4_arprot),
      .s_axi4_arqos (s_axi4_arqos),
      .s_axi4_aruser (s_axi4_aruser),
      .s_axi4_arvalid (s_axi4_arvalid),
      .s_axi4_arready (s_axi4_arready),
      .s_axi4_rid (s_axi4_rid),
      .s_axi4_rdata (s_axi4_rdata),
      .s_axi4_rresp (s_axi4_rresp),
      .s_axi4_rlast (s_axi4_rlast),
      .s_axi4_ruser (s_axi4_ruser),
      .s_axi4_rvalid (s_axi4_rvalid),
      .s_axi4_rready (s_axi4_rready),
      .s_axi4_awid (s_axi4_awid),
      .s_axi4_awaddr (s_axi4_awaddr),
      .s_axi4_awlen (s_axi4_awlen),
      .s_axi4_awsize (s_axi4_awsize),
      .s_axi4_awburst (s_axi4_awburst),
      .s_axi4_awlock (s_axi4_awlock),
      .s_axi4_awprot (s_axi4_awprot),
      .s_axi4_awqos (s_axi4_awqos),
      .s_axi4_awuser (s_axi4_awuser),
      .s_axi4_awvalid (s_axi4_awvalid),
      .s_axi4_awready (s_axi4_awready),
      .s_axi4_wdata (s_axi4_wdata),
      .s_axi4_wstrb (s_axi4_wstrb),
      .s_axi4_wlast (s_axi4_wlast),
      .s_axi4_wuser (s_axi4_wuser),
      .s_axi4_wvalid (s_axi4_wvalid),
      .s_axi4_wready (s_axi4_wready),
      .s_axi4_bid (s_axi4_bid),
      .s_axi4_bresp (s_axi4_bresp),
      .s_axi4_bvalid (s_axi4_bvalid),
      .s_axi4_bready (s_axi4_bready),
      .m_axi4_aclk (m_axi4_aclk),
      .m_axi4_aresetn (m_axi4_aresetn),
      .m_axi4_arid (m_axi4_arid),
      .m_axi4_araddr (m_axi4_araddr),
      .m_axi4_arlen (m_axi4_arlen),
      .m_axi4_arsize (m_axi4_arsize),
      .m_axi4_arburst (m_axi4_arburst),
      .m_axi4_arlock (m_axi4_arlock),
      .m_axi4_arprot (m_axi4_arprot),
      .m_axi4_arqos (m_axi4_arqos),
      .m_axi4_aruser (m_axi4_aruser),
      .m_axi4_arvalid (m_axi4_arvalid),
      .m_axi4_arready (m_axi4_arready),
      .m_axi4_rid (m_axi4_rid),
      .m_axi4_rdata (m_axi4_rdata),
      .m_axi4_rresp (m_axi4_rresp),
      .m_axi4_rlast (m_axi4_rlast),
      .m_axi4_ruser (m_axi4_ruser),
      .m_axi4_rvalid (m_axi4_rvalid),
      .m_axi4_rready (m_axi4_rready),
      .m_axi4_awid (m_axi4_awid),
      .m_axi4_awaddr (m_axi4_awaddr),
      .m_axi4_awlen (m_axi4_awlen),
      .m_axi4_awsize (m_axi4_awsize),
      .m_axi4_awburst (m_axi4_awburst),
      .m_axi4_awlock (m_axi4_awlock),
      .m_axi4_awprot (m_axi4_awprot),
      .m_axi4_awqos (m_axi4_awqos),
      .m_axi4_awuser (m_axi4_awuser),
      .m_axi4_awvalid (m_axi4_awvalid),
      .m_axi4_awready (m_axi4_awready),
      .m_axi4_wdata (m_axi4_wdata),
      .m_axi4_wstrb (m_axi4_wstrb),
      .m_axi4_wlast (m_axi4_wlast),
      .m_axi4_wuser (m_axi4_wuser),
      .m_axi4_wvalid (m_axi4_wvalid),
      .m_axi4_wready (m_axi4_wready),
      .m_axi4_bid (m_axi4_bid),
      .m_axi4_bresp (m_axi4_bresp),
      .m_axi4_bvalid (m_axi4_bvalid),
      .m_axi4_bready (m_axi4_bready)
   );
endmodule

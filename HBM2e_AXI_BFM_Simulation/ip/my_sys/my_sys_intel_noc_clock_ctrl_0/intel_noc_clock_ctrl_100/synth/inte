// (C) 2001-2022 Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions and other 
// software and tools, and its AMPP partner logic functions, and any output 
// files from any of the foregoing (including device programming or simulation 
// files), and any associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License Subscription 
// Agreement, Intel FPGA IP License Agreement, or other applicable 
// license agreement, including, without limitation, that your use is for the 
// sole purpose of programming logic devices manufactured by Intel and sold by 
// Intel or its authorized distributors.  Please refer to the applicable 
// agreement for further details.


module intel_noc_clock_ctrl # (
    parameter REFCLK_FREQ = "NOC_PLL_REFCLK_FREQ_100_MHZ",
    parameter NOC_BIN = "NOC_BIN_BIN1",
    parameter SCHMITT_TRIGGER_MODE = "SCHMITT_TRIGGER_OFF",
    parameter WEAK_PULL_DOWN_MODE = "WEAK_PULL_DOWN_ON",
    parameter WEAK_PULL_UP_MODE = "WEAK_PULL_UP_OFF"
)(
    input refclk,
    output pll_lock_o
);
    wire pll2ssm;
    wire refclk_buf;
    wire pll_lock;
    (* altera_attribute = "-name PRESERVE_FANOUT_FREE_WYSIWYG ON" *) tennm_ph2_io_ibuf #(
        .bus_hold( "BUS_HOLD_OFF" ),
        .io_standard( "IO_STANDARD_IOSTD_LVCMOS18" ),
        .equalization( "EQUALIZATION_OFF" ),
        .rzq_id( "RZQ_ID_RZQ0" ),
        .schmitt_trigger(SCHMITT_TRIGGER_MODE),
        .termination( "TERMINATION_RT_OFF" ),
        .usage_mode( "USAGE_MODE_GPIO" ),
        .vref( "VREF_OFF" ),
        .weak_pull_down(WEAK_PULL_DOWN_MODE),
        .weak_pull_up(WEAK_PULL_UP_MODE)
        ) nocpll_refclk_ibuf (
            .i(refclk),
            .o(refclk_buf)
        );
    
    (* altera_attribute = "-name PRESERVE_FANOUT_FREE_WYSIWYG ON; -name NOC_PLL ON" *) tennm_noc_pll #(
        .NOC_PLL_REFCLK_FREQ(REFCLK_FREQ), 
        .NOC_BIN(NOC_BIN)
    ) 
        pll_inst (
            .nocpll_refclk(refclk_buf), 
            .pll_pllc1_clk(pll2ssm)
        );
    
    (* altera_attribute = "-name PRESERVE_FANOUT_FREE_WYSIWYG ON; -name NOC_SSM ON" *) tennm_noc_ssm #() ssm_inst (
        .pll_pllc1_clk(pll2ssm), 
        .noc_clk_serv__clk(), 
        .nocpll_iniuclk(),
        .pll_lock_o(pll_lock)
    );
    assign pll_lock_o=pll_lock;
endmodule
